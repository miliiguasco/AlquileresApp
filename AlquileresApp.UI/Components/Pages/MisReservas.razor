@page "/misreservas"
@using AlquileresApp.Core.Entidades
@using AlquileresApp.Core.Enumerativos
@using AlquileresApp.Core.CasosDeUso.Reserva

@inject NavigationManager NavigationManager
@inject CasoDeUsoListarMisReservas casoDeUsoListarMisReservas
@inject CasoDeUsoCancelarReserva casoDeUsoCancelarReserva

<link href="css/MisReservas.css" rel="stylesheet" />
<div class="container_misreservas py-5">
    <h2 class="h2 mb-4">Mis Reservas</h2>

    @if (!string.IsNullOrEmpty(mensajeExito))
    {
        <div class="alert alert-success">@mensajeExito</div>
    }
    @if (!string.IsNullOrEmpty(mensajeError))
    {
        <div class="alert alert-danger">@mensajeError</div>
    }

    @if (!reservas.Any())
    {
        <div class="alert alert-info">No tenés reservas activas.</div>
    }
    else
    {
        <table class="table_misreservas table-hover table-bordered shadow-sm">
            <thead class="table-dark">
                <tr>
                    <th>Propiedad</th>
                    <th>Fecha inicio</th>
                    <th>Fecha fin</th>
                    <th>Estado</th>
                    <th>Total</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var reserva in reservas)
                {
                    <tr>
                        <td>@reserva.Propiedad.Id</td>
                        <td>@reserva.FechaInicio.ToShortDateString()</td>
                        <td>@reserva.FechaFin.ToShortDateString()</td>
                        <td>
                            <span class="badge bg-@GetBadgeColor(reserva.Estado)">
                                @reserva.Estado
                            </span>
                        </td>
                        <td>$@reserva.PrecioTotal.ToString("N2")</td>
                        <td>
                            @if (reserva.Estado == EstadoReserva.Pendiente)
                            {
                                <button class="btn btn-sm btn-primary me-2" @onclick="@(() => ModificarReserva(reserva.Id))">
                                    <i class="bi bi-pencil"></i> Modificar
                                </button>
                                <button class="btn btn-sm btn-danger" @onclick="@(() => CancelarReserva(reserva.Id))">
                                    <i class="bi bi-x-circle"></i> Cancelar
                                </button>
                            }
                            else
                            {
                                <span class="text-muted">Sin acciones</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@if (mostrarConfirmacion)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirmar Cancelación</h5>
                    <button type="button" class="btn-close" aria-label="Cerrar" @onclick="CancelarConfirmacion"></button>
                </div>
                <div class="modal-body">
                    <p>¿Estás seguro de que querés cancelar esta reserva?</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-secondary" @onclick="CancelarConfirmacion">No</button>
                    <button class="btn btn-danger" @onclick="ConfirmarCancelacion">Sí, Cancelar</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Reserva> reservas = new();
    private bool mostrarConfirmacion = false;
    private int reservaAEliminarId;
    private string mensajeError;
    private string mensajeExito;

    protected override async Task OnInitializedAsync()
    {
        CargarReservas();
    }

    private void CargarReservas()
    {
        reservas = casoDeUsoListarMisReservas.Ejecutar(1);
    }

    private string GetBadgeColor(EstadoReserva estado)
    {
        return estado switch
        {
            EstadoReserva.Pendiente => "warning",
            EstadoReserva.Confirmada => "success",
            EstadoReserva.Cancelada => "secondary",
            _ => "light"
        };
    }

    private void ModificarReserva(int id)
    {
        NavigationManager.NavigateTo($"/modificarreserva/{id}");
    }

    private void CancelarReserva(int id)
    {
        reservaAEliminarId = id;
        mostrarConfirmacion = true;
        mensajeError = null;
        mensajeExito = null;
    }

    private void ConfirmarCancelacion()
    {
        try
        {
            casoDeUsoCancelarReserva.Ejecutar(reservaAEliminarId);
            mensajeExito = "Reserva cancelada correctamente.";
            CargarReservas();
        }
        catch (Exception ex)
        {
            mensajeError = ex.Message;
        }
        finally
        {
            mostrarConfirmacion = false;
        }
    }

    private void CancelarConfirmacion()
    {
        mostrarConfirmacion = false;
    }
}
