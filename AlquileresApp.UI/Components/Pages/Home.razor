
@page "/"
@rendermode InteractiveServer
@using AlquileresApp.Core.Entidades
@using AlquileresApp.Core.CasosDeUso.Propiedad
@using AlquileresApp.Core.CasosDeUso.Reserva
@using AlquileresApp.Core.CasosDeUso.Calificacion
@using AlquileresApp.Core.Enumerativos
@using AlquileresApp.Core.CasosDeUso.Promocion
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.Components.Forms
@using System.IO
@inject IJSRuntime JS
@inject IWebHostEnvironment Environment
@inject CasoDeUsoListarPropiedadesFiltrado CUListarPropiedadesFiltrado
@inject CasoDeUsoCrearReserva CUReservarPropiedad
@inject CasoDeUsoListarPromocionesActivas CUListarPromocionesActivas

@inject CasoDeUsoMostrarCalificacion CUMostrarCalificacion

<link href="css/Filtradas.css" rel="stylesheet" />
@if (Promociones != null && Promociones.Any())
{
    <div id="carouselPromociones" class="carousel slide mb-5" data-bs-ride="carousel">
        <div class="carousel-inner text-center text-white">
            @for (int i = 0; i < Promociones.Count; i++)
            {
                var promo = Promociones[i];
                var isActive = i == 0 ? "active" : "";
                string bgClass;
if (i % 3 == 0)
    bgClass = "bg-primary";
else if (i % 3 == 1)
    bgClass = "bg-success";
else
    bgClass = "bg-warning text-dark";

                <div class="carousel-item @isActive @bgClass p-5 rounded">
                    <h3>@promo.Titulo</h3>
                    <p>@promo.Descripcion</p>
                    <h4 class="display-6 fw-bold">@promo.PorcentajeDescuento% OFF</h4>
                </div>
            }
        </div>

        <button class="carousel-control-prev" type="button" data-bs-target="#carouselPromociones" data-bs-slide="prev">
            <span class="carousel-control-prev-icon"></span>
            <span class="visually-hidden">Anterior</span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#carouselPromociones" data-bs-slide="next">
            <span class="carousel-control-next-icon"></span>
            <span class="visually-hidden">Siguiente</span>
        </button>
    </div>
}
<div class="container_listar_propiedades mt-5">
    <h2 class="tituloo">Busca tu lugar ideal</h2> 

    <EditForm Model="Filtros" OnValidSubmit="Buscar">
        <DataAnnotationsValidator />
       <div class="validation-summary">
           <ValidationSummary />
       </div>

        <div class="filtros">
            <div>
                <label>Ubicacion:</label>
                <InputText @bind-Value="Filtros.Localidad" class="input" />
            </div>

            <div>
                <label>Cantidad de personas:</label>
                <InputNumber @bind-Value="Filtros.CantidadHuespedes" class="input" />
            </div>

            <div>
                <label>Fecha de inicio:</label>
                <InputDate @bind-Value="Filtros.FechaInicio" class="input" />
            </div>

            <div>
                <label>Fecha de fin:</label>
                <InputDate @bind-Value="Filtros.FechaFin" class="input" />
            </div>

            <div>
                <button type="submit" class="btn btn-filtrar">Buscar</button>
            </div>
        </div>
    </EditForm>

    @if (Propiedades is null)
    {
        <div class="text-center">
            <p>...</p>
        </div>
    }
    else if (!Propiedades.Any())
    {
        <div class="text-center">
            <p>No hay propiedades que cumplan con los requisitos disponibles.</p>
        </div>
    }
    else
    {
        <ul class="lista-propiedades">
            @foreach (var propiedad in Propiedades)
            {
                var carouselId = $"carousel-{propiedad.Id}";

                <li class="propiedad-item">
                    <h3>@propiedad.Titulo</h3>

                    <div id="@carouselId" class="carousel slide propiedad-carousel" data-bs-ride="carousel">
                        <div class="carousel-inner">
                            @if (propiedad.Imagenes != null && propiedad.Imagenes.Any())
                            {
                                var index = 0;
                                foreach (var imagen in propiedad.Imagenes)
                                {
                                    <div class="carousel-item @(index == 0 ? "active" : "")">
                                        <img src="@imagen.Url" class="d-block w-100 propiedad-img" alt="Imagen de @propiedad.Titulo" />
                                    </div>
                                    index++;
                                }
                            }
                            else
                            {
                                <div class="carousel-item active">
                                    <img src="Imagenes/Propiedades/iconoimagen.jpg" class="d-block w-100 propiedad-img" alt="Sin imagen" />
                                </div>
                            }
                        </div>

                        @if (propiedad.Imagenes != null && propiedad.Imagenes.Count > 1)
                        {
                            <button class="carousel-control-prev" type="button" data-bs-target="#@carouselId" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Anterior</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#@carouselId" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Siguiente</span>
                            </button>
                        }
                    </div>

                    <p>@propiedad.Descripcion</p>
                    <p><strong>Dirección:</strong> @propiedad.Direccion</p>
                    <p><strong>Localidad:</strong> @propiedad.Localidad</p>
                    <p><strong>Capacidad:</strong> @propiedad.Capacidad personas</p>
                    <p><strong>Precio por noche:</strong> $@propiedad.PrecioPorNoche</p>
                    <p class="calificacion-promedio">
                    <strong>Calificación Promedio:</strong>
                    @if (propiedad.CalificacionPromedio > 0)  
                    {
                        <span style="color:#FFD700;">&#9733;</span> @* Una sola estrella dorada *@
                        <span>@propiedad.CalificacionPromedio.ToString("F1")</span> @* El número al lado (ej. 4.5) *@
                    }
                    else
                    {
                        <span>Sin calificaciones aún</span>
                    }
                    </p>
                    <a class="btn btn-secondary mt-2" href="/propiedad/@propiedad.Id">Ver más</a>



                    @if (PropiedadesExpandida.Contains(propiedad.Id))
                    {
                        <div class="mt-3 btn-ver-mas" style="display:flex; flex-direction: column; gap: 0.5rem; max-width: 300px;">
                            <h5>Servicios:</h5>
                            @if (propiedad.ServiciosDisponibles != null && propiedad.ServiciosDisponibles.Any())
                            {
                                <ul>
                                    @foreach (var servicio in propiedad.ServiciosDisponibles)
                                    {
                                        <li>@servicio.ToString()</li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p>No se especificaron servicios.</p>
                            }

                            <h5>Política de cancelación:</h5>
                            <p>@ObtenerDescripcionPolitica(propiedad.PoliticaCancelacion)</p>
                        </div>
                    }

                    <div class="info-grupo">
                            <button class="btn btn-primary" @onclick="() => IrAReservar(propiedad.Id)">
                                <i class="fas fa-calendar-check"></i> Reservar esta propiedad
                            </button>
                        </div>

                </li>
            }
        </ul>
    }
</div>

@code {
private List<Promocion> Promociones = new();
    private SearchFilters Filtros = new()
{
    FechaInicio = DateTime.Today,
    FechaFin = DateTime.Today.AddDays(1)
};
    private List<Propiedad>? Propiedades;
    private Usuario UsuarioActual = new Cliente
    {
        Nombre = "María",
        Apellido = "Gómez",
        Email = "maria@demo.com",
        Telefono = "1234567890",
        Contraseña = "123456",
        FechaNacimiento = new DateTime(1990, 1, 1)
    };
    private HashSet<int> PropiedadesExpandida = new();
protected override void OnInitialized()
    {
        Promociones = CUListarPromocionesActivas.Ejecutar();
    }
    private void Buscar()
    {
        Propiedades = CUListarPropiedadesFiltrado.Ejecutar(Filtros);
    }

    private void IrAReservar( int Id)
    {
        NavigationManager.NavigateTo($"/reservar/{Id}");
    }

    private string ObtenerDescripcionPolitica(PoliticasDeCancelacion politica)
    {
        return politica switch
        {
            PoliticasDeCancelacion.Anticipo20_72hs => "Requiere 20% de anticipo y permite cancelación hasta 72hs antes.",
            PoliticasDeCancelacion.SinAnticipo_NoCancelable => "No requiere anticipo, pero no permite cancelaciones.",
            PoliticasDeCancelacion.PagoTotal_48hs_50 => "Pago total por adelantado, permite cancelación hasta 48hs antes con 50% de reintegro.",
            _ => "No especificada."
        };
    }
}
